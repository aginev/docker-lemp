version: '3.5'

networks:
  app:

services:

  nginx:
    container_name: nginx
    image: nginx:1.20-alpine
    volumes:
      - ./:/var/www/html
      - ./.docker/nginx/cert.pem:/etc/ssl/certs/cert.pem
      - ./.docker/nginx/key.pem:/etc/ssl/private/key.pem
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app
    depends_on:
      - php
      - mysql
      - redis

  php:
    container_name: php
    build:
      context: ./
      dockerfile: ./.docker/php/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./:/var/www/html
    ports:
      - "9000:9000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - app

  mysql:
    container_name: mysql
    image: mariadb:10.8
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app

  redis:
    container_name: redis
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app

volumes:
  mysql_data:
    driver: local
